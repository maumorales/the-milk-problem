version: '3.8'
services:
  app:
    # Using a Dockerfile is optional, but included for completeness.
    container_name: app
    build: 
      context: .
      dockerfile: Dockerfile
      # [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
      args: 
        JAVA_VERSION: 11

    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock 

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:another-service
    
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined
    
    hostname: app
    
  # You can include other services not opened by VS Code as well
  # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.
  db:
    build: 
      context: .
      dockerfile: Dockerfile.db
    container_name: db
    hostname: db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: password
    ports: 
      - 5432:5432

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

  flyway:
    command: -url=jdbc:postgresql://db/milk_test -user=milk -password=milk -schemas=milk_test -connectRetries=60 migrate
    container_name: flyway
    hostname: flyway
    image: flyway/flyway
    restart: unless-stopped
    environment: 
      FLYWAY_CLEAN_DISABLED: false
    depends_on: 
      - db
    volumes: 
      - ../databases/milk:/flyway/sql
